"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var base_1 = __importDefault(require("../base"));
var AdminUsersResource = /** @class */ (function (_super) {
    __extends(AdminUsersResource, _super);
    function AdminUsersResource() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @description resets password by re-sending password token.
     * @param payload payload for generating reset-password token.
     * @returns
     */
    AdminUsersResource.prototype.sendResetPasswordToken = function (payload) {
        var path = "/admin/users/password-token";
        return this.client.request("POST", path, payload);
    };
    /**
     * @description resets the users password given the correct token.
     * @param payload reset password information.
     * @returns
     */
    AdminUsersResource.prototype.resetPassword = function (payload) {
        var path = "admin/users/reset-password";
        return this.client.request("POST", path, payload);
    };
    /**
     * Retrieves a given user
     * @param id id of the user
     * @returns the user
     */
    AdminUsersResource.prototype.retrieve = function (id) {
        var path = "/admin/users/" + id;
        return this.client.request("GET", path);
    };
    /**
     * @description creates a user with the provided information
     * @param payload user creation request body
     * @returns created user
     */
    AdminUsersResource.prototype.create = function (payload) {
        var path = "/admin/users";
        return this.client.request("POST", path, payload);
    };
    /**
     * @description updates a given user
     * @param id id of the user to update
     * @param payload user update request body
     * @returns the updated user
     */
    AdminUsersResource.prototype.update = function (id, payload) {
        var path = "/admin/users/" + id;
        return this.client.request("POST", path, payload);
    };
    /**
     * @description deletes a user
     * @param id id of the user to be deleted
     * @returns delete response
     */
    AdminUsersResource.prototype.delete = function (id) {
        var path = "/admin/users/" + id;
        return this.client.request("DELETE", path);
    };
    /**
     * @description lists all users
     * @returns a list of all users
     */
    AdminUsersResource.prototype.list = function () {
        var path = "/admin/users";
        return this.client.request("GET", path);
    };
    return AdminUsersResource;
}(base_1.default));
1;
exports.default = AdminUsersResource;
//# sourceMappingURL=users.js.map