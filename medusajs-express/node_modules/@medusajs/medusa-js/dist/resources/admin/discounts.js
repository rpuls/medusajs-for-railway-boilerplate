"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var base_1 = __importDefault(require("../base"));
var AdminDiscountsResource = /** @class */ (function (_super) {
    __extends(AdminDiscountsResource, _super);
    function AdminDiscountsResource() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @description Adds region to discount
     */
    AdminDiscountsResource.prototype.addRegion = function (id, regionId) {
        var path = "/admin/discounts/" + id + "/regions/" + regionId;
        return this.client.request("POST", path, {});
    };
    /**
     * @description Add valid product
     */
    AdminDiscountsResource.prototype.addValidProduct = function (id, productId) {
        var path = "/admin/discounts/" + id + "/products/" + productId;
        return this.client.request("POST", path, {});
    };
    /**
     * @description Creates discounts
     */
    AdminDiscountsResource.prototype.create = function (payload) {
        var path = "/admin/discounts";
        return this.client.request("POST", path, payload);
    };
    /**
     * @description Updates discount
     */
    AdminDiscountsResource.prototype.update = function (id, payload) {
        var path = "/admin/discounts/" + id;
        return this.client.request("POST", path, payload);
    };
    /**
     * @description Creates a dynamic discount code
     */
    AdminDiscountsResource.prototype.createDynamicCode = function (id, payload) {
        var path = "/admin/discounts/" + id + "/dynamic-codes";
        return this.client.request("POST", path, payload);
    };
    /**
     * @description Deletes a discount
     */
    AdminDiscountsResource.prototype.delete = function (id) {
        var path = "/admin/discounts/" + id;
        return this.client.request("DELETE", path);
    };
    /**
     * @description Deletes a dynamic discount
     */
    AdminDiscountsResource.prototype.deleteDynamicCode = function (id, code) {
        var path = "/admin/discounts/" + id + "/dynamic-codes/" + code;
        return this.client.request("DELETE", path);
    };
    /**
     * @description Retrieves a discount
     */
    AdminDiscountsResource.prototype.retrieve = function (id) {
        var path = "/admin/discounts/" + id;
        return this.client.request("GET", path);
    };
    /**
     * @description Retrieves a discount by code
     */
    AdminDiscountsResource.prototype.retrieveByCode = function (code) {
        var path = "/admin/discounts/code/" + code;
        return this.client.request("GET", path);
    };
    /**
     * @description Lists discounts
     */
    AdminDiscountsResource.prototype.list = function (query) {
        var path = "/admin/discounts";
        if (query) {
            var queryString = Object.entries(query).map(function (_a) {
                var key = _a[0], value = _a[1];
                return key + "=" + value;
            });
            path = "/admin/discounts?" + queryString.join("&");
        }
        return this.client.request("GET", path);
    };
    /**
     * @description Removes a region from a discount
     */
    AdminDiscountsResource.prototype.removeRegion = function (id, regionId) {
        var path = "/admin/discounts/" + id + "/regions/" + regionId;
        return this.client.request("DELETE", path);
    };
    /**
     * @description Removes a valid product from a discount
     */
    AdminDiscountsResource.prototype.removeValidProduct = function (id, productId) {
        var path = "/admin/discounts/" + id + "/products/" + productId;
        return this.client.request("DELETE", path);
    };
    return AdminDiscountsResource;
}(base_1.default));
exports.default = AdminDiscountsResource;
//# sourceMappingURL=discounts.js.map