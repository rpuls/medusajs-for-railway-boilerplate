import { AdminPostProductsProductReq, AdminPostProductsReq, AdminProductsListTypesRes, AdminProductsListTagsRes, AdminProductsRes, AdminPostProductsProductVariantsReq, AdminPostProductsProductVariantsVariantReq, AdminPostProductsProductOptionsReq, AdminPostProductsProductOptionsOption, AdminProductsDeleteVariantRes, AdminProductsDeleteRes, AdminProductsDeleteOptionRes, AdminPostProductsProductMetadataReq, AdminGetProductsParams, AdminProductsListRes } from "@medusajs/medusa";
import { ResponsePromise } from "../../typings";
import BaseResource from "../base";
declare class AdminProductsResource extends BaseResource {
    create(payload: AdminPostProductsReq): ResponsePromise<AdminProductsRes>;
    retrieve(id: string): ResponsePromise<AdminProductsRes>;
    update(id: string, payload: AdminPostProductsProductReq): ResponsePromise<AdminProductsRes>;
    delete(id: string): ResponsePromise<AdminProductsDeleteRes>;
    list(query: AdminGetProductsParams): ResponsePromise<AdminProductsListRes>;
    listTypes(): ResponsePromise<AdminProductsListTypesRes>;
    listTags(): ResponsePromise<AdminProductsListTagsRes>;
    setMetadata(id: string, payload: AdminPostProductsProductMetadataReq): ResponsePromise<AdminProductsRes>;
    createVariant(id: string, payload: AdminPostProductsProductVariantsReq): ResponsePromise<AdminProductsRes>;
    updateVariant(id: string, variantId: string, payload: AdminPostProductsProductVariantsVariantReq): ResponsePromise<AdminProductsRes>;
    deleteVariant(id: string, variantId: string): ResponsePromise<AdminProductsDeleteVariantRes>;
    addOption(id: string, payload: AdminPostProductsProductOptionsReq): ResponsePromise<AdminProductsRes>;
    updateOption(id: string, optionId: string, payload: AdminPostProductsProductOptionsOption): ResponsePromise<AdminProductsRes>;
    deleteOption(id: string, optionId: string): ResponsePromise<AdminProductsDeleteOptionRes>;
}
export default AdminProductsResource;
