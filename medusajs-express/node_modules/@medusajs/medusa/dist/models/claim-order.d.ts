import { Fulfillment } from "./fulfillment";
import { LineItem } from "./line-item";
import { ClaimItem } from "./claim-item";
import { Order } from "./order";
import { Return } from "./return";
import { ShippingMethod } from "./shipping-method";
import { Address } from "./address";
export declare enum ClaimType {
    REFUND = "refund",
    REPLACE = "replace"
}
export declare enum ClaimPaymentStatus {
    NA = "na",
    NOT_REFUNDED = "not_refunded",
    REFUNDED = "refunded"
}
export declare enum ClaimFulfillmentStatus {
    NOT_FULFILLED = "not_fulfilled",
    PARTIALLY_FULFILLED = "partially_fulfilled",
    FULFILLED = "fulfilled",
    PARTIALLY_SHIPPED = "partially_shipped",
    SHIPPED = "shipped",
    PARTIALLY_RETURNED = "partially_returned",
    RETURNED = "returned",
    CANCELED = "canceled",
    REQUIRES_ACTION = "requires_action"
}
export declare class ClaimOrder {
    id: string;
    payment_status: ClaimPaymentStatus;
    fulfillment_status: ClaimFulfillmentStatus;
    claim_items: ClaimItem[];
    additional_items: LineItem[];
    type: ClaimType;
    order_id: string;
    order: Order;
    return_order: Return;
    shipping_address_id: string;
    shipping_address: Address;
    shipping_methods: ShippingMethod[];
    fulfillments: Fulfillment[];
    refund_amount: number;
    canceled_at: Date;
    created_at: Date;
    updated_at: Date;
    deleted_at: Date;
    no_notification: Boolean;
    metadata: any;
    idempotency_key: string;
    private beforeInsert;
}
/**
 * @schema claim_order
 * title: "Claim Order"
 * description: "Claim Orders represent a group of faulty or missing items. Each claim order consists of a subset of items associated with an original order, and can contain additional information about fulfillments and returns."
 * x-resourceId: claim_order
 * properties:
 *   id:
 *     type: string
 *   type:
 *     type: string
 *     enum:
 *       - refund
 *       - replace
 *   payment_status:
 *     type: string
 *     enum:
 *       - na
 *       - not_refunded
 *       - refunded
 *   fulfillment_status:
 *     type: string
 *     enum:
 *       - not_fulfilled
 *       - partially_fulfilled
 *       - fulfilled
 *       - partially_shipped
 *       - shipped
 *       - partially_returned
 *       - returned
 *       - canceled
 *       - requires_action
 *   claim_items:
 *     description: "The items that have been claimed"
 *     type: array
 *     items:
 *       $ref: "#/components/schemas/claim_item"
 *   additional_items:
 *     description: "Refers to the new items to be shipped when the claim order has the type `replace`"
 *     type: array
 *     items:
 *       $ref: "#/components/schemas/line_item"
 *   order_id:
 *     description: "The id of the order that the claim comes from."
 *     type: string
 *   return_order:
 *     description: "Holds information about the return if the claim is to be returned"
 *     $ref: "#/components/schemas/return"
 *   shipping_address_id:
 *     description: "The id of the address that the new items should be shipped to"
 *     type: string
 *   shipping_address:
 *     description: "The address that the new items should be shipped to"
 *     $ref: "#/components/schemas/address"
 *   shipping_methods:
 *     description: "The shipping methods that the claim order will be shipped with."
 *     type: array
 *     items:
 *       $ref: "#/components/schemas/shipping_method"
 *   fulfillments:
 *     description: "The fulfillments of the new items to be shipped"
 *     type: array
 *     items:
 *       $ref: "#/components/schemas/fulfillment"
 *   refund_amount:
 *     description: "The amount that will be refunded in conjunction with the claim"
 *     type: integer
 *   canceled_at:
 *     description: "The date with timezone at which the Swap was canceled."
 *     type: string
 *     format: date-time
 *   created_at:
 *     type: string
 *     format: date-time
 *   updated_at:
 *     type: string
 *     format: date-time
 *   deleted_at:
 *     type: string
 *     format: date-time
 *   no_notification:
 *     description: "Flag for describing whether or not notifications related to this should be send."
 *     type: boolean
 *   metadata:
 *     type: object
 */
