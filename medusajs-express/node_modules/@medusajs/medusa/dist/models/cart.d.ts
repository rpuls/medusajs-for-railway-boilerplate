/**
 * @schema cart
 * title: "Cart"
 * description: "Represents a user cart"
 * x-resourceId: cart
 * properties:
 *   id:
 *     type: string
 *   email:
 *     type: string
 *   billing_address_id:
 *     type: string
 *   billing_address:
 *     $ref: "#/components/schemas/address"
 *   shipping_address_id:
 *     type: string
 *   shipping_address:
 *     $ref: "#/components/schemas/address"
 *   items:
 *     type: array
 *     items:
 *       $ref: "#/components/schemas/line_item"
 *   region_id:
 *     type: string
 *   region:
 *     $ref: "#/components/schemas/region"
 *   discounts:
 *     type: array
 *     items:
 *       $ref: "#/components/schemas/region"
 *   gift_cards:
 *     type: array
 *     items:
 *       $ref: "#/components/schemas/gift_card"
 *   customer_id:
 *     type: string
 *   customer:
 *     $ref: "#/components/schemas/customer"
 *   payment_session:
 *     $ref: "#/components/schemas/payment_session"
 *   payment_sessions:
 *     type: array
 *     items:
 *       $ref: "#/components/schemas/payment_session"
 *   payment:
 *     $ref: "#/components/schemas/payment"
 *   shipping_methods:
 *     type: array
 *     items:
 *       $ref: "#/components/schemas/shipping_method"
 *   type:
 *     type: string
 *     enum:
 *       - default
 *       - swap
 *       - payment_link
 *   completed_at:
 *     type: string
 *     format: date-time
 *   created_at:
 *     type: string
 *     format: date-time
 *   updated_at:
 *     type: string
 *     format: date-time
 *   deleted_at:
 *     type: string
 *     format: date-time
 *   metadata:
 *     type: object
 *   shipping_total:
 *     type: integer
 *   discount_total:
 *     type: integer
 *   tax_total:
 *     type: integer
 *   subtotal:
 *     type: integer
 *   refundable_amount:
 *     type: integer
 *   gift_card_total:
 *     type: integer
 */
import { Address } from "./address";
import { Customer } from "./customer";
import { Discount } from "./discount";
import { GiftCard } from "./gift-card";
import { LineItem } from "./line-item";
import { Payment } from "./payment";
import { PaymentSession } from "./payment-session";
import { Region } from "./region";
import { ShippingMethod } from "./shipping-method";
export declare enum CartType {
    DEFAULT = "default",
    SWAP = "swap",
    DRAFT_ORDER = "draft_order",
    PAYMENT_LINK = "payment_link",
    CLAIM = "claim"
}
export declare class Cart {
    id: string;
    email: string;
    billing_address_id: string;
    billing_address: Address;
    shipping_address_id: string;
    shipping_address: Address | null;
    items: LineItem[];
    region_id: string;
    region: Region;
    discounts: Discount[];
    gift_cards: GiftCard[];
    customer_id: string;
    customer: Customer;
    payment_session: PaymentSession | null;
    payment_sessions: PaymentSession[];
    payment_id: string;
    payment: Payment;
    shipping_methods: ShippingMethod[];
    type: CartType;
    completed_at: Date;
    payment_authorized_at: Date;
    created_at: Date;
    updated_at: Date;
    deleted_at: Date;
    metadata: any;
    idempotency_key: string;
    context: any;
    shipping_total?: number;
    discount_total?: number;
    tax_total?: number;
    refunded_total?: number;
    total?: number;
    subtotal?: number;
    refundable_amount?: number;
    gift_card_total?: number;
    private beforeInsert;
    private afterLoad;
}
