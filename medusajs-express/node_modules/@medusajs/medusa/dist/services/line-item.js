"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var medusa_core_utils_1 = require("medusa-core-utils");
var medusa_interfaces_1 = require("medusa-interfaces");
/**
 * Provides layer to manipulate line items.
 * @extends BaseService
 */
var LineItemService = /** @class */ (function (_super) {
    __extends(LineItemService, _super);
    function LineItemService(_a) {
        var manager = _a.manager, lineItemRepository = _a.lineItemRepository, productVariantService = _a.productVariantService, productService = _a.productService, regionService = _a.regionService, cartRepository = _a.cartRepository;
        var _this = _super.call(this) || this;
        /** @private @const {EntityManager} */
        _this.manager_ = manager;
        /** @private @const {LineItemRepository} */
        _this.lineItemRepository_ = lineItemRepository;
        /** @private @const {ProductVariantService} */
        _this.productVariantService_ = productVariantService;
        /** @private @const {ProductService} */
        _this.productService_ = productService;
        /** @private @const {RegionService} */
        _this.regionService_ = regionService;
        /** @private @const {CartRepository} */
        _this.cartRepository_ = cartRepository;
        return _this;
    }
    LineItemService.prototype.withTransaction = function (transactionManager) {
        if (!transactionManager) {
            return this;
        }
        var cloned = new LineItemService({
            manager: transactionManager,
            lineItemRepository: this.lineItemRepository_,
            productVariantService: this.productVariantService_,
            productService: this.productService_,
            regionService: this.regionService_,
            cartRepository: this.cartRepository_,
        });
        cloned.transactionManager_ = transactionManager;
        return cloned;
    };
    LineItemService.prototype.list = function (selector, config) {
        if (config === void 0) { config = { skip: 0, take: 50, order: { created_at: "DESC" } }; }
        return __awaiter(this, void 0, void 0, function () {
            var liRepo, query;
            return __generator(this, function (_a) {
                liRepo = this.manager_.getCustomRepository(this.lineItemRepository_);
                query = this.buildQuery_(selector, config);
                return [2 /*return*/, liRepo.find(query)];
            });
        });
    };
    /**
     * Retrieves a line item by its id.
     * @param {string} id - the id of the line item to retrieve
     * @param {object} config - the config to be used at query building
     * @return {LineItem} the line item
     */
    LineItemService.prototype.retrieve = function (id, config) {
        if (config === void 0) { config = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var lineItemRepository, validatedId, query, lineItem;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        lineItemRepository = this.manager_.getCustomRepository(this.lineItemRepository_);
                        validatedId = this.validateId_(id);
                        query = this.buildQuery_({ id: validatedId }, config);
                        return [4 /*yield*/, lineItemRepository.findOne(query)];
                    case 1:
                        lineItem = _a.sent();
                        if (!lineItem) {
                            throw new medusa_core_utils_1.MedusaError(medusa_core_utils_1.MedusaError.Types.NOT_FOUND, "Line item with ".concat(id, " was not found"));
                        }
                        return [2 /*return*/, lineItem];
                }
            });
        });
    };
    LineItemService.prototype.generate = function (variantId, regionId, quantity, config) {
        if (config === void 0) { config = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.atomicPhase_(function (manager) { return __awaiter(_this, void 0, void 0, function () {
                        var variant, region, price, shouldMerge, toCreate;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, this.productVariantService_
                                        .withTransaction(manager)
                                        .retrieve(variantId, {
                                        relations: ["product"],
                                    })];
                                case 1:
                                    variant = _a.sent();
                                    return [4 /*yield*/, this.regionService_
                                            .withTransaction(manager)
                                            .retrieve(regionId)];
                                case 2:
                                    region = _a.sent();
                                    shouldMerge = true;
                                    if (!(config.unit_price !== undefined && config.unit_price !== null)) return [3 /*break*/, 3];
                                    // if custom unit_price, we ensure positive values
                                    // and we choose to not merge the items
                                    shouldMerge = false;
                                    if (config.unit_price < 0) {
                                        price = 0;
                                    }
                                    else {
                                        price = config.unit_price;
                                    }
                                    return [3 /*break*/, 5];
                                case 3: return [4 /*yield*/, this.productVariantService_
                                        .withTransaction(manager)
                                        .getRegionPrice(variant.id, region.id)];
                                case 4:
                                    price = _a.sent();
                                    _a.label = 5;
                                case 5:
                                    toCreate = {
                                        unit_price: price,
                                        title: variant.product.title,
                                        description: variant.title,
                                        thumbnail: variant.product.thumbnail,
                                        variant_id: variant.id,
                                        quantity: quantity || 1,
                                        allow_discounts: variant.product.discountable,
                                        is_giftcard: variant.product.is_giftcard,
                                        metadata: (config === null || config === void 0 ? void 0 : config.metadata) || {},
                                        should_merge: shouldMerge,
                                    };
                                    return [2 /*return*/, toCreate];
                            }
                        });
                    }); })];
            });
        });
    };
    /**
     * Create a line item
     * @param {LineItem} lineItem - the line item object to create
     * @return {LineItem} the created line item
     */
    LineItemService.prototype.create = function (lineItem) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.atomicPhase_(function (manager) { return __awaiter(_this, void 0, void 0, function () {
                        var lineItemRepository, created, result;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    lineItemRepository = manager.getCustomRepository(this.lineItemRepository_);
                                    return [4 /*yield*/, lineItemRepository.create(lineItem)];
                                case 1:
                                    created = _a.sent();
                                    return [4 /*yield*/, lineItemRepository.save(created)];
                                case 2:
                                    result = _a.sent();
                                    return [2 /*return*/, result];
                            }
                        });
                    }); })];
            });
        });
    };
    /**
     * Updates a line item
     * @param {string} id - the id of the line item to update
     * @param {object} update - the properties to update on line item
     * @return {LineItem} the update line item
     */
    LineItemService.prototype.update = function (id, update) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.atomicPhase_(function (manager) { return __awaiter(_this, void 0, void 0, function () {
                        var lineItemRepository, lineItem, metadata, rest, _a, _b, _c, key, value, result;
                        var e_1, _d;
                        return __generator(this, function (_e) {
                            switch (_e.label) {
                                case 0:
                                    lineItemRepository = manager.getCustomRepository(this.lineItemRepository_);
                                    return [4 /*yield*/, this.retrieve(id)];
                                case 1:
                                    lineItem = _e.sent();
                                    metadata = update.metadata, rest = __rest(update, ["metadata"]);
                                    if (metadata) {
                                        lineItem.metadata = this.setMetadata_(lineItem, metadata);
                                    }
                                    try {
                                        for (_a = __values(Object.entries(rest)), _b = _a.next(); !_b.done; _b = _a.next()) {
                                            _c = __read(_b.value, 2), key = _c[0], value = _c[1];
                                            lineItem[key] = value;
                                        }
                                    }
                                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                                    finally {
                                        try {
                                            if (_b && !_b.done && (_d = _a.return)) _d.call(_a);
                                        }
                                        finally { if (e_1) throw e_1.error; }
                                    }
                                    return [4 /*yield*/, lineItemRepository.save(lineItem)];
                                case 2:
                                    result = _e.sent();
                                    return [2 /*return*/, result];
                            }
                        });
                    }); })];
            });
        });
    };
    /**
     * Deletes a line item.
     * @param {string} id - the id of the line item to delete
     * @return {Promise} the result of the delete operation
     */
    LineItemService.prototype.delete = function (id) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.atomicPhase_(function (manager) { return __awaiter(_this, void 0, void 0, function () {
                        var lineItemRepository, lineItem;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    lineItemRepository = manager.getCustomRepository(this.lineItemRepository_);
                                    return [4 /*yield*/, lineItemRepository.findOne({ where: { id: id } })];
                                case 1:
                                    lineItem = _a.sent();
                                    if (!lineItem) {
                                        return [2 /*return*/, Promise.resolve()];
                                    }
                                    return [4 /*yield*/, lineItemRepository.remove(lineItem)];
                                case 2:
                                    _a.sent();
                                    return [2 /*return*/, Promise.resolve()];
                            }
                        });
                    }); })];
            });
        });
    };
    return LineItemService;
}(medusa_interfaces_1.BaseService));
exports.default = LineItemService;
//# sourceMappingURL=line-item.js.map