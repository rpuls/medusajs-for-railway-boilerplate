export default ReturnReasonService;
declare const ReturnReasonService_base: any;
declare class ReturnReasonService extends ReturnReasonService_base {
    [x: string]: any;
    constructor({ manager, returnReasonRepository }: {
        manager: any;
        returnReasonRepository: any;
    });
    /** @private @constant {EntityManager} */
    private manager_;
    /** @private @constant {ReturnReasonRepository} */
    private retReasonRepo_;
    withTransaction(manager: any): ReturnReasonService;
    create(data: any): any;
    update(id: any, data: any): any;
    /**
     * @param {Object} selector - the query object for find
     * @param {Object} config - config object
     * @return {Promise} the result of the find operation
     */
    list(selector: any, config?: any): Promise<any>;
    /**
     * Gets an order by id.
     * @param {string} id - id of order to retrieve
     * @param {Object} config - config object
     * @return {Promise<Order>} the order document
     */
    retrieve(id: string, config?: any): Promise<Order>;
    delete(returnReasonId: any): Promise<any>;
}
