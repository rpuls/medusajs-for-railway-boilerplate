import styled from '@emotion/styled';
import { css, get } from '@theme-ui/css';
import { createShouldForwardProp } from '@styled-system/should-forward-prop';
import space from '@styled-system/space';
import color from '@styled-system/color';
import React from 'react';
import { keyframes } from '@emotion/react';

var boxSystemProps = [].concat(space.propNames, color.propNames);
/**
 * @internal
 * @type {(prop: string) => boolean}
 */

var __isBoxStyledSystemProp = function __isBoxStyledSystemProp(prop) {
  return boxSystemProps.includes(prop);
};
var shouldForwardProp = createShouldForwardProp(boxSystemProps);

var sx = function sx(props) {
  return css(props.sx)(props.theme);
};

var base = function base(props) {
  return css(props.__css)(props.theme);
};

var variant = function variant(_ref) {
  var theme = _ref.theme,
      variant = _ref.variant,
      _ref$__themeKey = _ref.__themeKey,
      __themeKey = _ref$__themeKey === void 0 ? 'variants' : _ref$__themeKey;

  return css(get(theme, __themeKey + '.' + variant, get(theme, variant)));
};

var Box = styled('div', {
  shouldForwardProp: shouldForwardProp
})({
  boxSizing: 'border-box',
  margin: 0,
  minWidth: 0
}, base, variant, space, color, sx, function (props) {
  return props.css;
});
Box.displayName = 'Box';

var Flex = styled(Box)({
  display: 'flex'
});
Flex.displayName = 'Flex';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded = ["width", "columns", "gap", "repeat"];

var px = function px(n) {
  return typeof n === 'number' ? n + 'px' : n;
};

var widthToColumns = function widthToColumns(width, repeat) {
  return Array.isArray(width) ? width.map(function (w) {
    return widthToColumns(w, repeat);
  }) : !!width && "repeat(auto-" + repeat + ", minmax(" + px(width) + ", 1fr))";
};

var countToColumns = function countToColumns(n) {
  return Array.isArray(n) ? n.map(countToColumns) : !!n && (typeof n === 'number' ? "repeat(" + n + ", 1fr)" : n);
};

var Grid = /*#__PURE__*/React.forwardRef(function Grid(_ref, ref) {
  var width = _ref.width,
      columns = _ref.columns,
      _ref$gap = _ref.gap,
      gap = _ref$gap === void 0 ? 3 : _ref$gap,
      _ref$repeat = _ref.repeat,
      repeat = _ref$repeat === void 0 ? 'fit' : _ref$repeat,
      props = _objectWithoutPropertiesLoose(_ref, _excluded);

  var gridTemplateColumns = !!width ? widthToColumns(width, repeat) : countToColumns(columns);
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref
  }, props, {
    __themeKey: "grids",
    __css: {
      display: 'grid',
      gridGap: gap,
      gridTemplateColumns: gridTemplateColumns
    }
  }));
});

var Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "button",
    variant: "primary"
  }, props, {
    __themeKey: "buttons",
    __css: {
      appearance: 'none',
      display: props.hidden ? undefined : 'inline-block',
      textAlign: 'center',
      lineHeight: 'inherit',
      textDecoration: 'none',
      fontSize: 'inherit',
      px: 3,
      py: 2,
      color: 'white',
      bg: 'primary',
      border: 0,
      borderRadius: 4
    }
  }));
});

var Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "a",
    variant: "styles.a"
  }, props, {
    __themeKey: "links"
  }));
});

var Paragraph = /*#__PURE__*/React.forwardRef(function Paragraph(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "p",
    variant: "paragraph",
    __themeKey: "text",
    __css: {
      fontFamily: 'body',
      fontWeight: 'body',
      lineHeight: 'body'
    }
  }, props));
});

var Text = /*#__PURE__*/React.forwardRef(function Text(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    as: "span",
    ref: ref,
    variant: "default"
  }, props, {
    __themeKey: "text"
  }));
});

var Heading = /*#__PURE__*/React.forwardRef(function Heading(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "h2",
    variant: "heading"
  }, props, {
    __themeKey: "text",
    __css: {
      fontFamily: 'heading',
      fontWeight: 'heading',
      lineHeight: 'heading'
    }
  }));
});

var Image = /*#__PURE__*/React.forwardRef(function Image(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "img"
  }, props, {
    __themeKey: "images",
    __css: _extends({
      maxWidth: '100%',
      height: 'auto'
    }, props.__css)
  }));
});

var Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    variant: "primary"
  }, props, {
    __themeKey: "cards"
  }));
});

var Label = /*#__PURE__*/React.forwardRef(function Label(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "label",
    variant: "label"
  }, props, {
    __themeKey: "forms",
    __css: {
      width: '100%',
      display: 'flex'
    }
  }));
});

var _excluded$1 = ["sx", "autofillBackgroundColor"];
/** @type {import('theme-ui').ThemeUIStyleObject} */

var autofillStyles = {
  boxShadow: 'inset 0 0 0 1000px var(--theme-ui-input-autofill-bg)',
  fontSize: 'inherit',
  ':first-line': {
    fontSize: '1rem'
  }
};
/** @type {import('theme-ui').ThemeUIStyleObject} */

var defaultInputStyles = {
  display: 'block',
  width: '100%',
  p: 2,
  appearance: 'none',
  fontSize: 'inherit',
  lineHeight: 'inherit',
  border: '1px solid',
  borderRadius: 4,
  color: 'inherit',
  bg: 'transparent',
  ':autofill, :autofill:hover, :autofill:focus': autofillStyles,
  ':-webkit-autofill, :-webkit-autofill:hover, :-webkit-autofill:focus': autofillStyles
};
var Input = /*#__PURE__*/React.forwardRef(function Input(_ref, ref) {
  var sx = _ref.sx,
      _ref$autofillBackgrou = _ref.autofillBackgroundColor,
      autofillBackgroundColor = _ref$autofillBackgrou === void 0 ? 'background' : _ref$autofillBackgrou,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$1);

  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "input",
    variant: "input",
    sx: _extends({
      '--theme-ui-input-autofill-bg': function themeUiInputAutofillBg(theme) {
        return get(theme.colors, autofillBackgroundColor, null);
      }
    }, sx)
  }, rest, {
    __themeKey: "forms",
    __css: defaultInputStyles
  }));
});

var _excluded$2 = ["size"];

var SVG = function SVG(_ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 24 : _ref$size,
      props = _objectWithoutPropertiesLoose(_ref, _excluded$2);

  return /*#__PURE__*/React.createElement(Box, _extends({
    as: "svg",
    xmlns: "http://www.w3.org/2000/svg",
    width: size + '',
    height: size + '',
    viewBox: "0 0 24 24",
    fill: "currentcolor"
  }, props));
};

SVG.displayName = 'SVG';

var getProps = function getProps(test) {
  return function (props) {
    var next = {};

    for (var key in props) {
      if (test(key || '')) next[key] = props[key];
    }

    return next;
  };
};
var MRE = /^m[trblxy]?$/;
var getMargin = getProps(function (k) {
  return MRE.test(k);
});
var omitMargin = getProps(function (k) {
  return !MRE.test(k);
});

var _excluded$3 = ["arrow"];

var DownArrow = function DownArrow(props) {
  return /*#__PURE__*/React.createElement(SVG, props, /*#__PURE__*/React.createElement("path", {
    d: "M7 10l5 5 5-5z"
  }));
};

var Select = /*#__PURE__*/React.forwardRef(function Select(_ref, ref) {
  var arrow = _ref.arrow,
      props = _objectWithoutPropertiesLoose(_ref, _excluded$3);

  return /*#__PURE__*/React.createElement(Box, _extends({}, getMargin(props), {
    sx: {
      display: 'flex'
    }
  }), /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "select",
    variant: "select"
  }, omitMargin(props), {
    __themeKey: "forms",
    __css: {
      display: 'block',
      width: '100%',
      p: 2,
      appearance: 'none',
      fontSize: 'inherit',
      lineHeight: 'inherit',
      border: '1px solid',
      borderRadius: 4,
      color: 'inherit',
      backgroundColor: function backgroundColor(theme) {
        return get(theme, 'colors.background', null);
      }
    }
  })), arrow || /*#__PURE__*/React.createElement(DownArrow, {
    sx: {
      ml: -28,
      alignSelf: 'center',
      pointerEvents: 'none'
    }
  }));
});

var Textarea = /*#__PURE__*/React.forwardRef(function Textarea(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "textarea",
    variant: "textarea"
  }, props, {
    __themeKey: "forms",
    __css: {
      display: 'block',
      width: '100%',
      p: 2,
      appearance: 'none',
      fontSize: 'inherit',
      lineHeight: 'inherit',
      border: '1px solid',
      borderRadius: 4,
      color: 'inherit',
      bg: 'transparent'
    }
  }));
});

var _excluded$4 = ["className", "sx", "variant"];

var RadioChecked = function RadioChecked(props) {
  return /*#__PURE__*/React.createElement(SVG, props, /*#__PURE__*/React.createElement("path", {
    d: "M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }));
};

var RadioUnchecked = function RadioUnchecked(props) {
  return /*#__PURE__*/React.createElement(SVG, props, /*#__PURE__*/React.createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }));
};

var RadioIcon = function RadioIcon(props) {
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RadioChecked, _extends({}, props, {
    __css: {
      display: 'none',
      'input:checked ~ &': {
        display: 'block'
      }
    }
  })), /*#__PURE__*/React.createElement(RadioUnchecked, _extends({}, props, {
    __css: {
      display: 'block',
      'input:checked ~ &': {
        display: 'none'
      }
    }
  })));
};

var Radio = /*#__PURE__*/React.forwardRef(function Radio(_ref, ref) {
  var className = _ref.className,
      sx = _ref.sx,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'radio' : _ref$variant,
      props = _objectWithoutPropertiesLoose(_ref, _excluded$4);

  return /*#__PURE__*/React.createElement(Box, {
    sx: {
      minWidth: 'min-content'
    }
  }, /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "input",
    type: "radio"
  }, props, {
    sx: {
      position: 'absolute',
      opacity: 0,
      zIndex: -1,
      width: 1,
      height: 1,
      overflow: 'hidden'
    }
  })), /*#__PURE__*/React.createElement(Box, {
    as: RadioIcon,
    "aria-hidden": "true",
    __themeKey: "forms",
    variant: variant,
    className: className,
    sx: sx,
    __css: {
      // todo: system props??
      mr: 2,
      borderRadius: 9999,
      color: 'gray',
      flexShrink: 0,
      'input:checked ~ &': {
        color: 'primary'
      },
      'input:focus ~ &': {
        bg: 'highlight'
      }
    }
  }));
});

var _excluded$5 = ["className", "sx", "variant", "children"];

var CheckboxChecked = function CheckboxChecked(props) {
  return /*#__PURE__*/React.createElement(SVG, props, /*#__PURE__*/React.createElement("path", {
    d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
  }));
};

var CheckboxUnchecked = function CheckboxUnchecked(props) {
  return /*#__PURE__*/React.createElement(SVG, props, /*#__PURE__*/React.createElement("path", {
    d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
  }));
};

var CheckboxIcon = function CheckboxIcon(props) {
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CheckboxChecked, _extends({}, props, {
    __css: {
      display: 'none',
      'input:checked ~ &': {
        display: 'block'
      }
    }
  })), /*#__PURE__*/React.createElement(CheckboxUnchecked, _extends({}, props, {
    __css: {
      display: 'block',
      'input:checked ~ &': {
        display: 'none'
      }
    }
  })));
};

var Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(_ref, ref) {
  var className = _ref.className,
      sx = _ref.sx,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'checkbox' : _ref$variant,
      children = _ref.children,
      props = _objectWithoutPropertiesLoose(_ref, _excluded$5);

  return /*#__PURE__*/React.createElement(Box, {
    sx: {
      minWidth: 'min-content'
    }
  }, /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "input",
    type: "checkbox"
  }, props, {
    sx: {
      position: 'absolute',
      opacity: 0,
      zIndex: -1,
      width: 1,
      height: 1,
      overflow: 'hidden'
    }
  })), /*#__PURE__*/React.createElement(Box, {
    as: CheckboxIcon,
    "aria-hidden": "true",
    __themeKey: "forms",
    variant: variant,
    className: className,
    sx: sx,
    __css: {
      mr: 2,
      borderRadius: 4,
      color: 'gray',
      flexShrink: 0,
      'input:checked ~ &': {
        color: 'primary'
      },
      'input:focus ~ &': {
        color: 'primary',
        bg: 'highlight'
      }
    }
  }), children);
});

var _excluded$6 = ["className", "label", "sx", "variant"];
var GUTTER = 2;
var SIZE = 18;
var Switch = /*#__PURE__*/React.forwardRef(function Switch(_ref, ref) {
  var className = _ref.className,
      label = _ref.label,
      sx = _ref.sx,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'switch' : _ref$variant,
      props = _objectWithoutPropertiesLoose(_ref, _excluded$6);

  return /*#__PURE__*/React.createElement(Label, {
    sx: {
      cursor: 'pointer'
    }
  }, /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "input",
    type: "checkbox",
    __themeKey: "forms",
    "aria-label": label
  }, props, {
    sx: {
      position: 'absolute',
      opacity: 0,
      zIndex: -1,
      width: 1,
      height: 1,
      overflow: 'hidden'
    }
  })), /*#__PURE__*/React.createElement(Box, {
    css: {
      padding: GUTTER
    },
    __themeKey: "forms",
    variant: variant,
    className: className,
    sx: sx,
    __css: {
      position: 'relative',
      bg: 'gray',
      borderRadius: SIZE,
      height: SIZE + GUTTER * 2,
      width: SIZE * 2 + GUTTER * 2,
      mr: 2,
      'input:disabled ~ &': {
        opacity: 0.5,
        cursor: 'not-allowed'
      },
      '& > div': {
        display: 'flex',
        alignItems: 'center',
        borderRadius: '50%',
        height: SIZE,
        width: SIZE,
        bg: 'white',
        boxShadow: '0 1px 2px rgba(0, 0, 0, 0.1)',
        position: 'relative',
        transform: 'translateX(0%)',
        transition: "transform 240ms cubic-bezier(0.165, 0.840, 0.440, 1.000)"
      },
      'input:checked ~ &': {
        bg: 'primary',
        '> div': {
          transform: 'translateX(100%)'
        }
      }
    }
  }, /*#__PURE__*/React.createElement(Box, null)), /*#__PURE__*/React.createElement("span", null, label));
});

var thumb = {
  appearance: 'none',
  width: 16,
  height: 16,
  bg: 'currentcolor',
  border: 0,
  borderRadius: 9999,
  variant: 'forms.slider.thumb'
};
var Slider = /*#__PURE__*/React.forwardRef(function Slider(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "input",
    type: "range",
    variant: "slider"
  }, props, {
    __themeKey: "forms",
    __css: {
      display: 'block',
      width: '100%',
      height: 4,
      my: 2,
      cursor: 'pointer',
      appearance: 'none',
      borderRadius: 9999,
      color: 'inherit',
      bg: 'gray',
      ':focus': {
        outline: 'none',
        color: 'primary'
      },
      '&::-webkit-slider-thumb': thumb,
      '&::-moz-range-thumb': thumb,
      '&::-ms-thumb': thumb
    }
  }));
});

var _excluded$7 = ["as", "label", "id", "name"];
var Field = /*#__PURE__*/React.forwardRef(function Field(_ref, ref) {
  var _ref$as = _ref.as,
      Control = _ref$as === void 0 ? Input : _ref$as,
      label = _ref.label,
      id = _ref.id,
      name = _ref.name,
      props = _objectWithoutPropertiesLoose(_ref, _excluded$7);

  var fieldIdentifier = id || name;
  return /*#__PURE__*/React.createElement(Box, getMargin(props), /*#__PURE__*/React.createElement(Label, {
    htmlFor: fieldIdentifier
  }, label), /*#__PURE__*/React.createElement(Control, _extends({
    ref: ref,
    id: fieldIdentifier,
    name: name
  }, omitMargin(props))));
});

var Progress = /*#__PURE__*/React.forwardRef(function Progress(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "progress",
    variant: "styles.progress"
  }, props, {
    __css: {
      display: 'block',
      width: '100%',
      height: '4px',
      margin: 0,
      padding: 0,
      overflow: 'hidden',
      appearance: 'none',
      color: 'primary',
      bg: 'gray',
      borderRadius: 9999,
      border: 'none',
      '&::-webkit-progress-bar': {
        bg: 'transparent'
      },
      '&::-webkit-progress-value': {
        bg: 'currentcolor'
      },
      '&::-moz-progress-bar': {
        bg: 'currentcolor'
      }
    }
  }));
});

var _excluded$8 = ["size", "strokeWidth", "value", "min", "max", "title"];
var Donut = /*#__PURE__*/React.forwardRef(function Donut(_ref, ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 128 : _ref$size,
      _ref$strokeWidth = _ref.strokeWidth,
      strokeWidth = _ref$strokeWidth === void 0 ? 2 : _ref$strokeWidth,
      _ref$value = _ref.value,
      value = _ref$value === void 0 ? 0 : _ref$value,
      _ref$min = _ref.min,
      min = _ref$min === void 0 ? 0 : _ref$min,
      _ref$max = _ref.max,
      max = _ref$max === void 0 ? 1 : _ref$max,
      title = _ref.title,
      props = _objectWithoutPropertiesLoose(_ref, _excluded$8);

  var r = 16 - strokeWidth;
  var C = 2 * r * Math.PI;
  var offset = C - (value - min) / (max - min) * C;
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "svg",
    viewBox: "0 0 32 32",
    width: size,
    height: size,
    strokeWidth: strokeWidth,
    fill: "none",
    stroke: "currentcolor",
    role: "img",
    "aria-valuenow": value,
    "aria-valuemin": min,
    "aria-valuemax": max
  }, props, {
    __css: {
      color: 'primary'
    }
  }), title && /*#__PURE__*/React.createElement("title", null, title), /*#__PURE__*/React.createElement("circle", {
    cx: 16,
    cy: 16,
    r: r,
    opacity: 1 / 8
  }), /*#__PURE__*/React.createElement("circle", {
    cx: 16,
    cy: 16,
    r: r,
    strokeDasharray: C,
    strokeDashoffset: offset,
    transform: "rotate(-90 16 16)"
  }));
});

var _excluded$9 = ["size", "strokeWidth", "max", "title", "duration"];
var spin = keyframes({
  from: {
    transform: 'rotate(0deg)'
  },
  to: {
    transform: 'rotate(360deg)'
  }
});
var Spinner = /*#__PURE__*/React.forwardRef(function Spinner(_ref, ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 48 : _ref$size,
      _ref$strokeWidth = _ref.strokeWidth,
      strokeWidth = _ref$strokeWidth === void 0 ? 4 : _ref$strokeWidth,
      _ref$max = _ref.max,
      _ref$title = _ref.title,
      title = _ref$title === void 0 ? 'Loading...' : _ref$title,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 500 : _ref$duration,
      props = _objectWithoutPropertiesLoose(_ref, _excluded$9);

  var r = 16 - strokeWidth;
  var C = 2 * r * Math.PI;
  var offset = C - 1 / 4 * C;
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "svg",
    viewBox: "0 0 32 32",
    width: size,
    height: size,
    strokeWidth: strokeWidth,
    fill: "none",
    stroke: "currentcolor",
    role: "img"
  }, props, {
    __css: {
      color: 'primary',
      overflow: 'visible'
    }
  }), /*#__PURE__*/React.createElement("title", null, title), /*#__PURE__*/React.createElement("circle", {
    cx: 16,
    cy: 16,
    r: r,
    opacity: 1 / 8
  }), /*#__PURE__*/React.createElement(Box, {
    as: "circle",
    cx: 16,
    cy: 16,
    r: r,
    strokeDasharray: C,
    strokeDashoffset: offset,
    __css: {
      transformOrigin: '50% 50%',
      animationName: spin.toString(),
      animationTimingFunction: 'linear',
      animationDuration: duration + 'ms',
      animationIterationCount: 'infinite'
    }
  }));
});

var _excluded$a = ["size"];
var Avatar = /*#__PURE__*/React.forwardRef(function Avatar(_ref, ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 48 : _ref$size,
      props = _objectWithoutPropertiesLoose(_ref, _excluded$a);

  return /*#__PURE__*/React.createElement(Image, _extends({
    ref: ref,
    width: size,
    height: size,
    variant: "avatar"
  }, props, {
    __css: {
      borderRadius: 9999
    }
  }));
});

var Badge = /*#__PURE__*/React.forwardRef(function Badge(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    variant: "primary"
  }, props, {
    __themeKey: "badges",
    __css: {
      display: 'inline-block',
      verticalAlign: 'baseline',
      fontSize: 0,
      fontWeight: 'bold',
      whiteSpace: 'nowrap',
      px: 1,
      borderRadius: 2,
      color: 'white',
      bg: 'primary'
    }
  }));
});

var _excluded$b = ["size"];
var IconButton = /*#__PURE__*/React.forwardRef(function IconButton(_ref, ref) {
  var _props$__css;

  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 32 : _ref$size,
      props = _objectWithoutPropertiesLoose(_ref, _excluded$b);

  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "button",
    variant: "icon"
  }, props, {
    __themeKey: "buttons",
    __css: {
      label: ((_props$__css = props.__css) == null ? void 0 : _props$__css.label) || 'IconButton',
      appearance: 'none',
      display: 'inline-flex',
      alignItems: 'center',
      justifyContent: 'center',
      padding: 1,
      width: size,
      height: size,
      color: 'inherit',
      bg: 'transparent',
      border: 'none',
      borderRadius: 4
    }
  }));
});

var _excluded$c = ["size"];
var x = /*#__PURE__*/React.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  fill: "currentcolor",
  viewBox: "0 0 24 24"
}, /*#__PURE__*/React.createElement("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}));
var Close = /*#__PURE__*/React.forwardRef(function Close(_ref, ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 32 : _ref$size,
      props = _objectWithoutPropertiesLoose(_ref, _excluded$c);

  return /*#__PURE__*/React.createElement(IconButton, _extends({
    ref: ref,
    size: size,
    title: "Close",
    "aria-label": "Close",
    variant: "close"
  }, props, {
    children: x
  }));
});

var Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    variant: "primary"
  }, props, {
    __themeKey: "alerts",
    __css: {
      display: 'flex',
      alignItems: 'center',
      px: 3,
      py: 2,
      fontWeight: 'bold',
      color: 'white',
      bg: 'primary',
      borderRadius: 4
    }
  }));
});

var Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "hr",
    variant: "styles.hr"
  }, props, {
    __css: {
      color: 'gray',
      m: 0,
      my: 2,
      border: 0,
      borderBottom: '1px solid'
    }
  }));
});

var _excluded$d = ["variant", "sx", "ratio", "src", "frameBorder", "allowFullScreen", "width", "height", "allow"];
var getContainerProps = getProps(__isBoxStyledSystemProp);
var getIframeProps = getProps(function (str) {
  return !__isBoxStyledSystemProp(str);
});
/** @typedef {import("../index").EmbedProps} EmbedProps */

/** @type {React.ForwardRefExoticComponent<EmbedProps>} */

var Embed = /*#__PURE__*/React.forwardRef(function Embed(_ref, ref) {
  var variant = _ref.variant,
      sx = _ref.sx,
      _ref$ratio = _ref.ratio,
      ratio = _ref$ratio === void 0 ? 16 / 9 : _ref$ratio,
      src = _ref.src,
      _ref$frameBorder = _ref.frameBorder,
      frameBorder = _ref$frameBorder === void 0 ? 0 : _ref$frameBorder,
      _ref$allowFullScreen = _ref.allowFullScreen,
      allowFullScreen = _ref$allowFullScreen === void 0 ? true : _ref$allowFullScreen,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? 560 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? 315 : _ref$height,
      allow = _ref.allow,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$d);

  return /*#__PURE__*/React.createElement(Box, _extends({
    variant: variant,
    sx: sx,
    __css: {
      width: '100%',
      height: 0,
      paddingBottom: 100 / ratio + '%',
      position: 'relative',
      overflow: 'hidden'
    }
  }, getContainerProps(rest)), /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    as: "iframe",
    src: src,
    width: width,
    height: height,
    frameBorder: frameBorder,
    allowFullScreen: allowFullScreen,
    allow: allow
  }, getIframeProps(rest), {
    __css: {
      position: 'absolute',
      width: '100%',
      height: '100%',
      top: 0,
      bottom: 0,
      left: 0,
      border: 0
    }
  })));
});

var _excluded$e = ["ratio", "children"];
var AspectRatio = /*#__PURE__*/React.forwardRef(function AspectRatio(_ref, ref) {
  var _ref$ratio = _ref.ratio,
      ratio = _ref$ratio === void 0 ? 4 / 3 : _ref$ratio,
      children = _ref.children,
      props = _objectWithoutPropertiesLoose(_ref, _excluded$e);

  return /*#__PURE__*/React.createElement(Box, {
    ref: ref,
    sx: {
      position: 'relative',
      overflow: 'hidden'
    }
  }, /*#__PURE__*/React.createElement(Box, {
    sx: {
      width: '100%',
      height: 0,
      paddingBottom: 100 / ratio + '%'
    }
  }), /*#__PURE__*/React.createElement(Box, _extends({}, props, {
    __css: {
      position: 'absolute',
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    }
  }), children));
});

var _excluded$f = ["ratio"];
var AspectImage = /*#__PURE__*/React.forwardRef(function AspectImage(_ref, ref) {
  var ratio = _ref.ratio,
      props = _objectWithoutPropertiesLoose(_ref, _excluded$f);

  return /*#__PURE__*/React.createElement(AspectRatio, {
    ratio: ratio
  }, /*#__PURE__*/React.createElement(Image, _extends({
    ref: ref
  }, props, {
    __css: {
      objectFit: 'cover'
    }
  })));
});

var Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref,
    variant: "container"
  }, props, {
    __themeKey: "layout",
    __css: {
      width: '100%',
      maxWidth: 'container',
      mx: 'auto'
    }
  }));
});

var NavLink = /*#__PURE__*/React.forwardRef(function NavLink(props, ref) {
  return /*#__PURE__*/React.createElement(Link, _extends({
    ref: ref,
    variant: "nav"
  }, props, {
    __css: {
      color: 'inherit',
      textDecoration: 'none',
      fontWeight: 'bold',
      display: 'inline-block',
      '&:hover, &:focus, &.active': {
        color: 'primary'
      }
    }
  }));
});

var Message = /*#__PURE__*/React.forwardRef(function Message(props, ref) {
  return /*#__PURE__*/React.createElement(Box, _extends({
    ref: ref
  }, props, {
    __themeKey: "messages",
    __css: {
      padding: 3,
      paddingLeft: function paddingLeft(t) {
        return t.space[3] - t.space[1];
      },
      borderLeftWidth: function borderLeftWidth(t) {
        return t.space[1];
      },
      borderLeftStyle: 'solid',
      borderLeftColor: 'primary',
      borderRadius: 4,
      bg: 'highlight'
    }
  }));
});

var MenuIcon = function MenuIcon(_ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 24 : _ref$size;
  return /*#__PURE__*/React.createElement(Box, {
    as: "svg",
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    fill: "currentcolor",
    viewBox: "0 0 24 24",
    sx: {
      display: 'block',
      margin: 0
    }
  }, /*#__PURE__*/React.createElement("path", {
    d: "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
  }));
};
var MenuButton = /*#__PURE__*/React.forwardRef(function MenuButton(props, ref) {
  return /*#__PURE__*/React.createElement(IconButton, _extends({
    ref: ref,
    title: "Menu",
    "aria-label": "Toggle Menu",
    variant: "menu"
  }, props), /*#__PURE__*/React.createElement(MenuIcon, null));
});

export { Alert, AspectImage, AspectRatio, Avatar, Badge, Box, Button, Card, Checkbox, Close, Container, Divider, Donut, Embed, Field, Flex, Grid, Heading, IconButton, Image, Input, Label, Link, MenuButton, Message, NavLink, Paragraph, Progress, Radio, Select, Slider, Spinner, Switch, Text, Textarea };
