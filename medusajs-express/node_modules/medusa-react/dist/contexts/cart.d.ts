import React from "react";
import { useAddShippingMethodToCart, useCompleteCart, useCreateCart, useSetPaymentSession, useUpdateCart, useCreatePaymentSession } from "../hooks/carts";
import { Cart } from "../types";
interface CartState {
    cart?: Cart;
}
interface CartContext extends CartState {
    setCart: (cart: Cart) => void;
    pay: ReturnType<typeof useSetPaymentSession>;
    createCart: ReturnType<typeof useCreateCart>;
    startCheckout: ReturnType<typeof useCreatePaymentSession>;
    completeCheckout: ReturnType<typeof useCompleteCart>;
    updateCart: ReturnType<typeof useUpdateCart>;
    addShippingMethod: ReturnType<typeof useAddShippingMethodToCart>;
    totalItems: number;
}
declare const CartContext: React.Context<CartContext | null>;
export declare const useCart: () => CartContext;
interface CartProps {
    children: React.ReactNode;
    initialState?: Cart;
}
export declare const CartProvider: ({ children, initialState, }: CartProps) => JSX.Element;
export {};
