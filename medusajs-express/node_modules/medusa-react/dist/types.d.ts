import { Region, ProductVariant as ProductVariantEntity, StoreCartsRes } from "@medusajs/medusa";
import { QueryKey, UseQueryOptions } from "react-query";
export declare type UseQueryOptionsWrapper<TQueryFn = unknown, E = Error, TQueryKey extends QueryKey = QueryKey> = Omit<UseQueryOptions<TQueryFn, E, TQueryFn, TQueryKey>, "queryKey" | "queryFn" | "select" | "refetchInterval">;
export declare type RegionInfo = Pick<Region, "currency_code" | "tax_code" | "tax_rate">;
export declare type ProductVariant = ConvertDateToString<Omit<ProductVariantEntity, "beforeInsert">>;
export declare type ProductVariantInfo = Pick<ProductVariant, "prices">;
declare type ConvertDateToString<T extends {}> = {
    [P in keyof T]: T[P] extends Date ? Date | string : T[P];
};
export declare type Cart = StoreCartsRes["cart"];
export {};
