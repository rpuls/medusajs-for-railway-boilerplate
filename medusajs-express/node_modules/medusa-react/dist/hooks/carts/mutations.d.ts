import { StoreCartsRes, StoreCompleteCartRes, StorePostCartReq, StorePostCartsCartPaymentSessionUpdateReq, StorePostCartsCartReq, StorePostCartsCartShippingMethodReq } from "@medusajs/medusa";
import { UseMutationOptions } from "react-query";
export declare const useCreateCart: (options?: UseMutationOptions<StoreCartsRes, Error, StorePostCartReq | undefined, unknown> | undefined) => import("react-query").UseMutationResult<import("@medusajs/medusa-js").Response<StoreCartsRes>, Error, StorePostCartReq | undefined, unknown>;
export declare const useUpdateCart: (cartId: string, options?: UseMutationOptions<StoreCartsRes, Error, StorePostCartsCartReq, unknown> | undefined) => import("react-query").UseMutationResult<import("@medusajs/medusa-js").Response<StoreCartsRes>, Error, StorePostCartsCartReq, unknown>;
export declare const useCompleteCart: (cartId: string, options?: UseMutationOptions<StoreCompleteCartRes, Error, void, unknown> | undefined) => import("react-query").UseMutationResult<import("@medusajs/medusa-js").Response<StoreCompleteCartRes>, Error, void, unknown>;
export declare const useCreatePaymentSession: (cartId: string, options?: UseMutationOptions<StoreCartsRes, Error, void, unknown> | undefined) => import("react-query").UseMutationResult<import("@medusajs/medusa-js").Response<StoreCartsRes>, Error, void, unknown>;
export declare const useUpdatePaymentSession: (cartId: string, options?: UseMutationOptions<StoreCartsRes, Error, {
    provider_id: string;
} & StorePostCartsCartPaymentSessionUpdateReq, unknown> | undefined) => import("react-query").UseMutationResult<import("@medusajs/medusa-js").Response<StoreCartsRes>, Error, {
    provider_id: string;
} & StorePostCartsCartPaymentSessionUpdateReq, unknown>;
declare type RefreshPaymentSessionMutationData = {
    provider_id: string;
};
export declare const useRefreshPaymentSession: (cartId: string, options?: UseMutationOptions<StoreCartsRes, Error, RefreshPaymentSessionMutationData, unknown> | undefined) => import("react-query").UseMutationResult<import("@medusajs/medusa-js").Response<StoreCartsRes>, Error, RefreshPaymentSessionMutationData, unknown>;
declare type SetPaymentSessionMutationData = {
    provider_id: string;
};
export declare const useSetPaymentSession: (cartId: string, options?: UseMutationOptions<StoreCartsRes, Error, SetPaymentSessionMutationData, unknown> | undefined) => import("react-query").UseMutationResult<import("@medusajs/medusa-js").Response<StoreCartsRes>, Error, SetPaymentSessionMutationData, unknown>;
export declare const useAddShippingMethodToCart: (cartId: string, options?: UseMutationOptions<StoreCartsRes, Error, StorePostCartsCartShippingMethodReq, unknown> | undefined) => import("react-query").UseMutationResult<import("@medusajs/medusa-js").Response<StoreCartsRes>, Error, StorePostCartsCartShippingMethodReq, unknown>;
declare type DeletePaymentSessionMutationData = {
    provider_id: string;
};
export declare const useDeletePaymentSession: (cartId: string, options?: UseMutationOptions<StoreCartsRes, Error, DeletePaymentSessionMutationData, unknown> | undefined) => import("react-query").UseMutationResult<import("@medusajs/medusa-js").Response<StoreCartsRes>, Error, DeletePaymentSessionMutationData, unknown>;
export declare const useStartCheckout: (options?: UseMutationOptions<Omit<import("@medusajs/medusa").Cart, "refundable_amount" | "refunded_total">, Error, StorePostCartReq, unknown> | undefined) => import("react-query").UseMutationResult<Omit<import("@medusajs/medusa").Cart, "refundable_amount" | "refunded_total">, Error, StorePostCartReq, unknown>;
export {};
