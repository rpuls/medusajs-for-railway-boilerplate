import { jsx as jsx$1 } from '@theme-ui/core';
export { __ThemeUIContext, createElement, merge, useThemeUI } from '@theme-ui/core';
export { InitializeColorMode, useColorMode } from '@theme-ui/color-modes';
export { Styled, Themed, components } from '@theme-ui/mdx';
export { ThemeProvider } from '@theme-ui/theme-provider';
export * from '@theme-ui/components';
export { css, get } from '@theme-ui/css';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var BaseStyles = function BaseStyles(props) {
  return jsx('div', _extends({}, props, {
    sx: {
      fontFamily: 'body',
      lineHeight: 'body',
      fontWeight: 'body',
      variant: 'styles'
    }
  }));
};
var jsx = jsx$1;

export { BaseStyles, jsx };
