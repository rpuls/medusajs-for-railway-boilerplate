"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InMemoryConfigStore = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _uuid = require("uuid");

var _os = _interopRequireDefault(require("os"));

var _path = require("path");

var InMemoryConfigStore = /*#__PURE__*/function () {
  function InMemoryConfigStore() {
    (0, _classCallCheck2["default"])(this, InMemoryConfigStore);
    (0, _defineProperty2["default"])(this, "config", {});
    (0, _defineProperty2["default"])(this, "path", (0, _path.join)(_os["default"].tmpdir(), "medusa"));
    this.config = this.createBaseConfig();
  }

  (0, _createClass2["default"])(InMemoryConfigStore, [{
    key: "createBaseConfig",
    value: function createBaseConfig() {
      return {
        "telemetry.enabled": true,
        "telemetry.machine_id": "not-a-machine-id-".concat((0, _uuid.v4)())
      };
    }
  }, {
    key: "get",
    value: function get(key) {
      return this.config[key];
    }
  }, {
    key: "set",
    value: function set(key, value) {
      this.config[key] = value;
    }
  }, {
    key: "all",
    value: function all() {
      return this.config;
    }
  }, {
    key: "size",
    value: function size() {
      return Object.keys(this.config).length;
    }
  }, {
    key: "has",
    value: function has(key) {
      return !!this.config[key];
    }
  }, {
    key: "del",
    value: function del(key) {
      delete this.config[key];
    }
  }, {
    key: "clear",
    value: function clear() {
      this.config = this.createBaseConfig();
    }
  }]);
  return InMemoryConfigStore;
}();

exports.InMemoryConfigStore = InMemoryConfigStore;