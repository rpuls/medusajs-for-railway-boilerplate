"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _path = require("path");

var _child_process = require("child_process");

var _isTruthy = _interopRequireDefault(require("./is-truthy"));

var MEDUSA_TELEMETRY_VERBOSE = process.env.MEDUSA_TELEMETRY_VERBOSE || false;

function createFlush(enabled) {
  if (!enabled) {
    return;
  }

  return /*#__PURE__*/function () {
    var _flush = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
      var forked;
      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if ((0, _isTruthy["default"])(MEDUSA_TELEMETRY_VERBOSE)) {
                console.log("Flushing queue...");
              }

              forked = (0, _child_process.fork)((0, _path.join)(__dirname, "send.js"), {
                detached: true,
                stdio: MEDUSA_TELEMETRY_VERBOSE ? "inherit" : "ignore",
                execArgv: []
              });
              forked.unref();

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    function flush() {
      return _flush.apply(this, arguments);
    }

    return flush;
  }();
}

var _default = createFlush;
exports["default"] = _default;